apply plugin: 'com.android.application'


project.ext {
    supportLibraryVersion = "28.1.0"
    support = "1.0.0"
    constraintlayout = "2.0.0-alpha3"
    constraintLayout = "1.1.3"
    jetpack = "2.0.0"
    daggerVersion = "2.16"
    retrofit = "2.4.0"
    okhttp = "3.11.0"
    rxJavaVersion = "2.1.0"
    rxAndroidVersion = "2.1.0"
    timberVersion = "4.6.0"
    lifecycleVersion = "1.1.1"


    espresso = "3.1.1"

}


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.notes.crud.zenolab.crud"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //ProductFlavor
    buildTypes {

        debug {
            buildConfigField "String", "API_KEY", "\"xxxxxxxxxxxxxxxxx\""
            buildConfigField "String", "API_URL", '\"https://trade.opteck.com/\"'
            buildConfigField "boolean", "LOG", "true"
        }

        release {
            buildConfigField "String", "API_KEY", "\"xxxxxxxxxxxxxxxxx\""
            buildConfigField "String", "API_URL", '\"https://trade.opteck.com/\"'
            buildConfigField "boolean", "LOG", "false"

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation 'com.google.android.material:material:1.1.0-alpha02'

    //ROOM Persistence
    //----------------------------------------------------------------------------------------------
    def room_version = "1.1.1"

    implementation "android.arch.persistence.room:runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0-alpha1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-alpha1'
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    // use kapt for Kotlin

    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "android.arch.persistence.room:guava:$room_version"

    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$room_version"
    //----------------------------------------------------------------------------------------------
    //ROOM Persistence
    //  dependencies {
    //-----------------------------------------------------------------------------------------------
    // def room_version = "1.1.1"
    /*
    def room_version = "2.1.0-alpha03"

    implementation "androidx.room:room-runtime:$room_version"
    // annotationProcessor "androidx.room:room-compiler:$room_version" // use kapt for Kotlin

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // optional - Coroutines support for Room
    implementation "androidx.room:room-coroutines:$room_version"

    // Test helpers
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation "androidx.room:room-testing:$room_version"
    */

    //----------------------------------------------------------------------------------------------

    //----------------------------------------------------------------------------------------------
    //  }

    //    implementation 'com.android.support:appcompat-v7:28.0.0'
//    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
//    implementation 'com.android.support:recyclerview-v7:28.0.0'

//    // Dagger core
//    annotationProcessor "com.google.dagger:dagger-compiler:$project.daggerVersion"
//    implementation "com.google.dagger:dagger:$project.daggerVersion"
//
//    // Dagger Android
//    annotationProcessor "com.google.dagger:dagger-android-processor:$project.daggerVersion"
//    implementation "com.google.dagger:dagger-android-support:$project.daggerVersion"
//    // if you are not using support library, include this instead
//    implementation "com.google.dagger:dagger-android:$project.daggerVersion"

    //Retrofit
//    implementation "com.squareup.retrofit2:retrofit:$project.retrofit"
    //OkHttp
//    implementation "com.squareup.okhttp3:okhttp:$project.okhttp"
//    implementation 'com.squareup.okio:okio:1.14.0'
//    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: "$project.okhttp"

    //Retrofit2+RxJava
//    implementation "com.squareup.retrofit2:adapter-rxjava:$project.retrofit"
    //RxJava2CallAdapterFactory
//    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofit"
//    implementation "com.squareup.retrofit2:converter-gson:$project.retrofit"

    // ReactiveX
//    implementation "io.reactivex.rxjava2:rxjava:$project.rxJavaVersion"
//    implementation "io.reactivex.rxjava2:rxandroid:$project.rxAndroidVersion"

    // Timber
    //implementation "com.jakewharton.timber:timber:$tiker.timberVersion"

    // Lifecycle
//    implementation "android.arch.lifecycle:runtime:$tiker.lifecycleVersion"
//    implementation "android.arch.lifecycle:extensions:$tiker.lifecycleVersion"

    // AAC -Part of Android Jetpack.
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$project.jetpack"
    implementation "androidx.lifecycle:lifecycle-runtime:$project.jetpack"
    implementation "androidx.lifecycle:lifecycle-extensions:$project.jetpack"


    testImplementation 'junit:junit:4.12'

    // Core library
    androidTestImplementation "androidx.test:core:$project.support"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.1.1'

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$project.support"
    androidTestImplementation "androidx.test.ext:truth:$project.support"
    androidTestImplementation 'com.google.truth:truth:0.42'

    // Espresso dependencies
    androidTestImplementation "androidx.test.espresso:espresso-core:$project.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$project.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$project.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$project.espresso"
    androidTestImplementation "androidx.test.espresso:espresso-web:$project.espresso"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:3.1.1"

    // The following Espresso dependency can be either "implementation"
    // or "androidTestImplementation", depending on whether you want the
    // dependency to appear on your APK's compile classpath or the test APK
    // classpath.
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'

//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

}
